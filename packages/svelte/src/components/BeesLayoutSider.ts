/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import { Components, JSX } from '@bees-ui/core';


interface BeesLayoutSiderProps {
  
  /**  */
  prefixCls?: Components.BeesLayoutSider["prefixCls"]
  
  /**  */
  collapsible?: Components.BeesLayoutSider["collapsible"]
  
  /**  */
  collapsed?: Components.BeesLayoutSider["collapsed"]
  
  /**  */
  defaultCollapsed?: Components.BeesLayoutSider["defaultCollapsed"]
  
  /**  */
  reverseArrow?: Components.BeesLayoutSider["reverseArrow"]
  
  /**  */
  width?: Components.BeesLayoutSider["width"]
  
  /**  */
  trigger?: Components.BeesLayoutSider["trigger"]
  
  /**  */
  collapsedWidth?: Components.BeesLayoutSider["collapsedWidth"]
  
  /**  */
  breakpoint?: Components.BeesLayoutSider["breakpoint"]
  
  /**  */
  theme?: Components.BeesLayoutSider["theme"]
  
  /**  */
  zeroWidthTriggerStyle?: Components.BeesLayoutSider["zeroWidthTriggerStyle"]
}

interface BeesLayoutSiderEvents {
  
  /**  */
  beesBreakpoint: Parameters<JSX.BeesLayoutSider["onBeesBreakpoint"]>[0]
  
  /**  */
  beesCollapse: Parameters<JSX.BeesLayoutSider["onBeesCollapse"]>[0]
}

interface BeesLayoutSiderSlots {
  default: any
}
  
/* generated by Svelte v4.2.9 */
import {
	SvelteComponent,
	binding_callbacks,
	create_slot,
	detach,
	element,
	get_all_dirty_from_scope,
	get_slot_changes,
	init,
	insert,
	listen,
	run_all,
	safe_not_equal,
	set_custom_element_data,
	transition_in,
	transition_out,
	update_slot_base
} from "svelte/internal";

import "svelte/internal/disclose-version";
import { createEventDispatcher, onMount } from 'svelte';

function create_fragment(ctx) {
	let bees_layout_sider;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[16].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[15], null);

	return {
		c() {
			bees_layout_sider = element("bees-layout-sider");
			if (default_slot) default_slot.c();
			set_custom_element_data(bees_layout_sider, "prefix-cls", /*prefixCls*/ ctx[0]);
			set_custom_element_data(bees_layout_sider, "collapsible", /*collapsible*/ ctx[1]);
			set_custom_element_data(bees_layout_sider, "collapsed", /*collapsed*/ ctx[2]);
			set_custom_element_data(bees_layout_sider, "default-collapsed", /*defaultCollapsed*/ ctx[3]);
			set_custom_element_data(bees_layout_sider, "reverse-arrow", /*reverseArrow*/ ctx[4]);
			set_custom_element_data(bees_layout_sider, "width", /*width*/ ctx[5]);
			set_custom_element_data(bees_layout_sider, "trigger", /*trigger*/ ctx[6]);
			set_custom_element_data(bees_layout_sider, "collapsed-width", /*collapsedWidth*/ ctx[7]);
			set_custom_element_data(bees_layout_sider, "breakpoint", /*breakpoint*/ ctx[8]);
			set_custom_element_data(bees_layout_sider, "theme", /*theme*/ ctx[9]);
		},
		m(target, anchor) {
			insert(target, bees_layout_sider, anchor);

			if (default_slot) {
				default_slot.m(bees_layout_sider, null);
			}

			/*bees_layout_sider_binding*/ ctx[17](bees_layout_sider);
			current = true;

			if (!mounted) {
				dispose = [
					listen(bees_layout_sider, "beesBreakpoint", /*onEvent*/ ctx[11]),
					listen(bees_layout_sider, "beesCollapse", /*onEvent*/ ctx[11])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 32768)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[15],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[15])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[15], dirty, null),
						null
					);
				}
			}

			if (!current || dirty & /*prefixCls*/ 1) {
				set_custom_element_data(bees_layout_sider, "prefix-cls", /*prefixCls*/ ctx[0]);
			}

			if (!current || dirty & /*collapsible*/ 2) {
				set_custom_element_data(bees_layout_sider, "collapsible", /*collapsible*/ ctx[1]);
			}

			if (!current || dirty & /*collapsed*/ 4) {
				set_custom_element_data(bees_layout_sider, "collapsed", /*collapsed*/ ctx[2]);
			}

			if (!current || dirty & /*defaultCollapsed*/ 8) {
				set_custom_element_data(bees_layout_sider, "default-collapsed", /*defaultCollapsed*/ ctx[3]);
			}

			if (!current || dirty & /*reverseArrow*/ 16) {
				set_custom_element_data(bees_layout_sider, "reverse-arrow", /*reverseArrow*/ ctx[4]);
			}

			if (!current || dirty & /*width*/ 32) {
				set_custom_element_data(bees_layout_sider, "width", /*width*/ ctx[5]);
			}

			if (!current || dirty & /*trigger*/ 64) {
				set_custom_element_data(bees_layout_sider, "trigger", /*trigger*/ ctx[6]);
			}

			if (!current || dirty & /*collapsedWidth*/ 128) {
				set_custom_element_data(bees_layout_sider, "collapsed-width", /*collapsedWidth*/ ctx[7]);
			}

			if (!current || dirty & /*breakpoint*/ 256) {
				set_custom_element_data(bees_layout_sider, "breakpoint", /*breakpoint*/ ctx[8]);
			}

			if (!current || dirty & /*theme*/ 512) {
				set_custom_element_data(bees_layout_sider, "theme", /*theme*/ ctx[9]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) {
				detach(bees_layout_sider);
			}

			if (default_slot) default_slot.d(detaching);
			/*bees_layout_sider_binding*/ ctx[17](null);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let __ref;
	let __mounted = false;
	const dispatch = createEventDispatcher();
	let { prefixCls = undefined } = $$props;
	let { collapsible = undefined } = $$props;
	let { collapsed = undefined } = $$props;
	let { defaultCollapsed = undefined } = $$props;
	let { reverseArrow = undefined } = $$props;
	let { width = undefined } = $$props;
	let { trigger = undefined } = $$props;
	let { collapsedWidth = undefined } = $$props;
	let { breakpoint = undefined } = $$props;
	let { theme = undefined } = $$props;
	let { zeroWidthTriggerStyle = undefined } = $$props;
	const getWebComponent = () => __ref;

	onMount(() => {
		$$invalidate(14, __mounted = true);
	});

	const setProp = (prop, value) => {
		if (__ref) $$invalidate(10, __ref[prop] = value, __ref);
	};

	const onEvent = e => {
		e.stopPropagation();
		dispatch(e.type, e.detail);
	};

	function bees_layout_sider_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			__ref = $$value;
			$$invalidate(10, __ref);
		});
	}

	$$self.$$set = $$props => {
		if ('prefixCls' in $$props) $$invalidate(0, prefixCls = $$props.prefixCls);
		if ('collapsible' in $$props) $$invalidate(1, collapsible = $$props.collapsible);
		if ('collapsed' in $$props) $$invalidate(2, collapsed = $$props.collapsed);
		if ('defaultCollapsed' in $$props) $$invalidate(3, defaultCollapsed = $$props.defaultCollapsed);
		if ('reverseArrow' in $$props) $$invalidate(4, reverseArrow = $$props.reverseArrow);
		if ('width' in $$props) $$invalidate(5, width = $$props.width);
		if ('trigger' in $$props) $$invalidate(6, trigger = $$props.trigger);
		if ('collapsedWidth' in $$props) $$invalidate(7, collapsedWidth = $$props.collapsedWidth);
		if ('breakpoint' in $$props) $$invalidate(8, breakpoint = $$props.breakpoint);
		if ('theme' in $$props) $$invalidate(9, theme = $$props.theme);
		if ('zeroWidthTriggerStyle' in $$props) $$invalidate(12, zeroWidthTriggerStyle = $$props.zeroWidthTriggerStyle);
		if ('$$scope' in $$props) $$invalidate(15, $$scope = $$props.$$scope);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*__mounted, zeroWidthTriggerStyle*/ 20480) {
			$: if (__mounted) setProp('zeroWidthTriggerStyle', zeroWidthTriggerStyle);
		}
	};

	return [
		prefixCls,
		collapsible,
		collapsed,
		defaultCollapsed,
		reverseArrow,
		width,
		trigger,
		collapsedWidth,
		breakpoint,
		theme,
		__ref,
		onEvent,
		zeroWidthTriggerStyle,
		getWebComponent,
		__mounted,
		$$scope,
		slots,
		bees_layout_sider_binding
	];
}

class BeesLayoutSider extends SvelteComponent {
  $$prop_def: BeesLayoutSiderProps;
  $$events_def: BeesLayoutSiderEvents;
  $$slot_def: BeesLayoutSiderSlots;

  $on<K extends keyof BeesLayoutSiderEvents>(type: K, callback: (e: BeesLayoutSiderEvents[K]) => any): () => void {
	  return super.$on(type, callback);
	}

  $set($$props: Partial<BeesLayoutSiderProps>): void {
	  super.$set($$props);
	}

	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			prefixCls: 0,
			collapsible: 1,
			collapsed: 2,
			defaultCollapsed: 3,
			reverseArrow: 4,
			width: 5,
			trigger: 6,
			collapsedWidth: 7,
			breakpoint: 8,
			theme: 9,
			zeroWidthTriggerStyle: 12,
			getWebComponent: 13
		});
	}

	get getWebComponent(): HTMLBeesLayoutSiderElement | undefined {
		return this.$$.ctx[13];
	}
}

export default BeesLayoutSider;